zebra.ver="1.0.0"

# managers
@ui.events=zebra.ui.EventManager()
@ui.paintManager=zebra.ui.PaintManImpl()
@ui.focusManager=zebra.ui.FocusManager()
@ui.cursorManager=zebra.ui.CursorManager()
@ui.clipboard=zebra.ui.ClipboardMan()
@ui.tooltip=zebra.ui.TooltipManager()
@ui.popup=zebra.ui.PopupManager()

layers=("layers.root", "layers.win", "layers.popup")
layers.root=*zebra.ui.BaseLayer("root")
layers.win=*zebra.ui.WinLayer()
layers.popup=*zebra.ui.PopupLayer()

# pallete
col.white=rgb(125,125,125)
col.black=#FFFFFF

col.gray1=#464646
col.gray2=#464646
col.gray3=#505050
col.gray4=#777777
col.gray5=@gray
col.gray6=#A0A0A0
col.gray7=#B8B8B8
col.gray8=#dedede 
#@col.white
col.bg=@black

#  wizard
@ui.wizard=zebra.ui.p3d.Wizard()


# borders
br.raised2=zebra.ui.p3d.P3DBorder()
br.sunken2=Border(4)
br.raised=Border(1)
br.sunken=zebra.ui.p3d.ListBorder()
#!!!@br.etched

br.etched=Border(1, #CCCCCC, 2, 4)
br.plain=Border(1, #cccccc, 1)
br.dot=Border(2, @white, 2)

# default
def.lay=RasterLayout()
def.fn=Font("Arial", 0, 12)
def.bfn=Font("Arial", 1, 12)
def.sfn=Font("Arial", 0, 10)
def.bg=Fill(@col.bg)
def.fgcol=@lightGray
#def.fgcol=@white
def.brcol=@col.gray3

# button component
bt.on=zebra.ui.p3d.ButtonBorder(@true)
bt.off=zebra.ui.p3d.ButtonBorder(@false)
bt.over=zebra.ui.p3d.ButtonBorder(@false,(rgb(235,235,235), rgb(120,140,140), @col.gray5, @col.gray7))

bt.off=Border(1,rgb(205,205,205), 3, 8)
bt.on=Border(1,@white, 3, 8)
bt.over=Border(1,@red, 5, 8)

bt.br=*ViewSet(("pressed", @bt.on, "out", @bt.off, "over", @bt.over))
bt.marker=Border(1,@col.gray4)
bt.lab.fg=@white
#bt.lab.fn=@def.bfn

# checkbox component
rd.off=zebra.ui.p3d.RadioboxView(@false)
rd.on=zebra.ui.p3d.RadioboxView(@true)
rd.onover=zebra.ui.p3d.RadioboxView(@true, @red)
rd.offover=zebra.ui.p3d.RadioboxView(@false, @red)

ch.off=zebra.ui.p3d.CheckboxView(@false)
ch.on=zebra.ui.p3d.CheckboxView(@true)
ch.onover=zebra.ui.p3d.CheckboxView(@true, @red)
ch.offover=zebra.ui.p3d.CheckboxView(@false, @red)

#ch.onover=Picture(@ch.img,48,12,12,12)
#ch.offover=Picture(@ch.img,60,12,12,12)

# scroll bar component
vsb.bg=Fill(@col.gray3)
hsb.bg=Fill(@col.gray3)

vsb.bn.br=Border(1, rgb(200, 0, 0), 3, 6)
hsb.bn.br=Border(1, rgb(200, 0, 0), 3, 6)

bt.img=path("button.gif")
hsb.db.out=zebra.ui.p3d.ScrollButton(1)
hsb.db.pressed=zebra.ui.p3d.ScrollButton(1)
hsb.db.over=@hsb.db.out
hsb.db.disabled=@hsb.db.out

hsb.ib.out=zebra.ui.p3d.ScrollButton(2)
hsb.ib.pressed=zebra.ui.p3d.ScrollButton(2)
hsb.ib.over=@hsb.ib.out
hsb.ib.disabled=@hsb.ib.out

vsb.ib.out=zebra.ui.p3d.ScrollButton(8)
vsb.ib.pressed=zebra.ui.p3d.ScrollButton(8)
vsb.ib.over=@vsb.ib.out
vsb.ib.disabled=@vsb.ib.out

vsb.db.out=zebra.ui.p3d.ScrollButton(4)
vsb.db.pressed=zebra.ui.p3d.ScrollButton(4)
vsb.db.over=@vsb.db.out
vsb.db.disabled=@vsb.db.out

#  border panel
#bp.bg=
bp.br=TitledBorder(@br.etched,16)
bp.title.fn=@def.bfn
#bp.title.fg=#9fda58
bp.title.fg=@white


ac.lay=FlowLayout(16,16,1,2)
ch.lay=FlowLayout(16,16,1,2)

# combobox component
combo.br=zebra.ui.p3d.ListBorder()
combo.sv=Fill(200,0,0)
combo.lay=*BorderLayout(0,0)

combo.img=path("combo.gif")
combo.bt.out=Picture(@combo.img,0,0,18,18)
combo.bt.over=Picture(@combo.img,36,0,18,18)
combo.bt.pressed=Picture(@combo.img,18,0,18,18)
combo.bt.disabled=Picture(@combo.img,54,0,18,18)
combo.wpad.br=@combo.br
combo.wpad.bg=@def.bg
##combo.bt.ag=
##combo.bt.ps=Dimension(16,-1)

# notebook component
note.br=TitledBorder(@br.etched)
note.tab.off=zebra.ui.p3d.TabBorder(1,2)
note.tab.on=zebra.ui.p3d.TabBorder(0,2)
note.tab.over=zebra.ui.p3d.TabBorder(2,2)
note.tab.marker=@br.plain
note.tab.fg=@red
##9fda58

@note.tab.on.onColor1=@white
@note.tab.on.onColor2=@gray
@note.tab.off.offColor=@darkGray

@note.tab.off.fillColor2=rgb(50,50,50)
@note.tab.off.fillColor1=rgb(110,110,110)
@note.tab.off.fillColor3=rgb(110,110,110)

@note.tab.on.fillColor2=rgb(50,50,50)
@note.tab.on.fillColor1=rgb(110,110,110)
@note.tab.on.fillColor3=rgb(110,110,110)

@note.tab.over.fillColor1=rgb(50,50,50)
@note.tab.over.fillColor2=rgb(110,110,110)
@note.tab.over.fillColor3=rgb(110,110,110)


# statusbar component
sbar.br=@br.sunken2

# progress bar
#pr.br=Border(1, #9fda58, 2, 2)
pr.br=Border(1, @red, 2, 2)
pr.bv=Fill(180, 0, 0)

# tooltip
tt.padding=(2,2,2,2)
tt.bg=Fill(@col.gray6)
tt.br=Border(@col.gray1)
tt.fn=@def.sfn
tt.fg=@col.black

# Selection colors and views
rect.col=rgb(180,90,70)

# list component
list.pos.br=Border(1,@rect.col)
list.sv=Fill(200,0,0)
list.br=zebra.ui.p3d.ListBorder(@white,rgb(200,200,200),rgb(150,0,0))

#list.bg=Fill(@col.gray1)

# tree view component
#tree.bg=
tree.img=path("tree.gif")
tree.least=Picture(@tree.img,16,0,15,14)
tree.open=Picture(@tree.img,0,14,16,14)
tree.close=Picture(@tree.img,0,0,16,14)
tree.off=Picture(@tree.img,32,0,11,11)
tree.on=Picture(@tree.img,32,11,11,11)
tree.av=CompositeView((Fill(200,0,0), Border(1,rgb(200,180,200)))
tree.iv=Border(1, rgb(150,0,0), 1);
tree.vp.fg=@col.black
tree.vp.fn=@def.bfn

# Extender component
ext.img=path("ext.gif")
ext.off=Picture(@ext.img,0,0,13,13)
ext.on=Picture(@ext.img,13,0,13,13)
ext.title.bg=Gradient(rgb(220,220,220),rgb(160,160,160))
#ext.title.br=
ext.lab.fg=@col.white
ext.lab.fn=@def.bfn

# menu component
menu.sv=Fill(200,0,0)
menu.pos.br=@menu.sv
menu.fgcol=#9fda58
menu.fn=@def.fn
menu.sub=Picture(path("misc.gif"),0,0,10,9)
#!!!menu.br=BorderShadow(@br.sunken)
menu.br=Border(1, @col.black)
#menu.bg=@def.bg
menu.bg=Gradient(rgb(120,120,120), @black)
menu.item.line=*zebra.ui.Line(@br.plain)

# split panel
split.bar.br=@br.plain
split.bar.bg=Fill(200,0,0)
split.bar.ps=Dimension(4,4)
#split.br

# link component
ln.fn=@def.bfn
ln.colors=(@red, rgb(200,0,0), @white, @red, rgb(200,200,200))

line.col=@white

# grid caption component
#grid.bg=
gcap.fn=@def.bfn
gcap.fgcol=@col.black
#gcap.bg=Gradient(@col.gray3, @col.gray7)
gcap.bg=Gradient(rgb(180,0,0), rgb(230,0,0))
gcap.brv=@br.plain

#  grid component
#grid.cell.bg=
#grid.bg=
grid.isv=Fill(@black)
grid.asv=Fill(200,0,0)
grid.mv=Border(1,rgb(170,190,170))

# menubar component
#mbar.bg=Gradient(rgb(180,180,180),rgb(240,240,240))
#mbar.bg=Fill(@white)
#mbar.br=@br.plain
mbar.fn=@def.bfn
mbar.fgcol=@menu.fgcol
#mbar.onbr=Border(1,rgb(120,120,120))
#mbar.offbr=@menu.sv
mbar.onbr=@menu.sv

#grd.addColorStop(0, "#8ED6FF"); // light blue
#grd.addColorStop(1, "#004CB3"); // dark blue

#mbar.offbr=Gradient(rgb(187,237,255), rgb(248,255,255))
mbar.offbr=Gradient(#AEAEAE, #9C9C9C)


# textfield component
#tf.curv=
tf.cur.col=@red
tf.br=zebra.ui.p3d.TFieldBorder(@col.gray4, @col.gray6)
tf.bg=Gradient(rgb(42,42,42), rgb(77,77,77))
tf.sel=rgb(0,140,0)
tf.cmenu.cut="Cut"
tf.cmenu.del="Delete"
tf.cmenu.paste="Paste"
tf.cmenu.copy="Copy"
tf.cmenu.selall="Select all"
#tf.cmenu=zebra.ui.TextField.Menu()

# textrender
txt.dc1=rgb(128,128,128)
txt.dc2=@col.white

# slider component
sl.img=path("slider.gif")
sl.scc=@red
sl.hbundle=Picture(@sl.img,0,0,11,18)
sl.vbundle=Picture(@sl.img,11,0,18,11)
sl.br=@br.dot
sl.gauge=Border(@lightGray)
sl.marker=@br.dot

#  spin component
#spin.img=path("spin.gif")
#spin.b1.pressed=Picture(@spin.img,15,0,15,9)
#spin.b1.over=Picture(@spin.img,0,0,15,9)
#spin.b1.out=Picture(@spin.img,30,0,15,9)
#spin.b2.pressed=Picture(@spin.img,15,9,15,9)
#spin.b2.over=Picture(@spin.img,0,9,15,9)
#spin.b2.out=Picture(@spin.img,30,9,15,9)
#spin.b.br=

# toolbar component

#tb.over=@mbar.offbr
tb.over=CompositeView(Gradient(@col.black, @col.white), @br.plain)
##@br.raised

#tb.pressed=@bt.on
tb.pressed=@br.plain


#@br.etched
#tb.out=Border(3,rgb(200,180,200))

tb.line.view=@br.dot

tb.combo.obr=Border(1,@col.black)
tb.combo.bg=Fill(@col.white)
tb.combo.br=Border(1,rgb(200,180,200))

tb.br=zebra.ui.p3d.P3DBorder()
##tb.bg=
##tb.br=

# window component
win.img=path("win.gif")
win.b.over=Picture(@win.img,16,0,16,16)
win.b.out=Picture(@win.img,0,0,16,16)
win.b.pressed=Picture(@win.img,32,0,16,16)
win.icon=Picture(@win.img,16,32,16,16)
win.corner=Picture(@win.img,0,32,9,8)
win.br=Border(1, rgb(200,200,200), 4, 3) 
win.cap.av=Fill(@red)
win.cap.iv=Fill(200,0,0)


#!!!!!!
#  demo related stuff
#!!!!!
tooltiparea.fg=#9fda58
cell.bg1=rgb(50,0,0)
cell.bg2=rgb(100,0,0)
designer.title.fg=#9fda58
designer.title.bg=rgb(120,0,0)

icon.path=path("icons.gif")
icon.excl=Picture(@icon.path,32,0,32,32)



