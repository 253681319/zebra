zebra.ver="preAlpha.step2"

#@ui.events=zebra.ui.EventManager()
#@ui.paintManager=zebra.ui.PaintManImpl()
#@ui.focusManager=zebra.ui.FocusManager()
#@ui.cursorManager=zebra.ui.CursorManager()
#@ui.clipboard=zebra.ui.ClipboardMan()
@ui.tooltip=zebra.ui.TooltipManager()
@ui.popup=zebra.ui.PopupManager()

layers=("layers.root", "layers.win", "layers.popup")
layers.root=*zebra.ui.BaseLayer("root")
layers.win=*zebra.ui.WinLayer()
layers.popup=*zebra.ui.PopupLayer()

addons=("zebra.ui.MWheelSupport")

# pallete
col.white=rgb(255,255,255)
col.black=@black
col.gray1=rgb(161,161,161)
col.gray2=rgb(170,170,170)
col.gray3=rgb(199,199,199)
col.gray4=rgb(206,206,206)
col.gray5=rgb(217,217,217)
col.gray6=rgb(228,228,228)
col.gray7=rgb(243,243,243)
col.gray8=@col.white
col.bg=rgb(253,253,253)

#  wizard
@ui.wizard=zebra.ui.p3d.Wizard()

# borders
br.raised2=zebra.ui.p3d.P3DBorder()
br.sunken2=LightSunken()
br.raised=Raised()
br.sunken=zebra.ui.p3d.ListBorder()
#!!!@br.etched

br.etched=Border(1, rgb(115,112,122), 1, 3)
br.plain=Border(1)
br.dot=Border(2)

# default
def.fn=Font("Arial", 0, 12)
def.bfn=Font("Arial", 1, 12)
def.sfn=Font("Arial", 0, 10)

# button component
bt.on=zebra.ui.p3d.ButtonBorder(@true)
bt.off=zebra.ui.p3d.ButtonBorder(@false)
bt.over=zebra.ui.p3d.ButtonBorder(@false,(rgb(235,235,235), rgb(120,140,140), @col.gray5, @col.gray7))
bt.br=*ViewSet(("pressed", @bt.on, "out", @bt.off, "over", @bt.over, "disabled", @bt.over ))
bt.marker=Border(1,@col.gray4)

# checkbox component
ch.img=path("checkbox.gif")

rd.off=Picture(@ch.img,12,0,12,12)
rd.on=Picture(@ch.img,0,0,12,12)
rd.doff=Picture(@ch.img,24,0,12,12)
rd.don=Picture(@ch.img,36,0,12,12)
rd.onover=Picture(@ch.img,48,0,12,12)
rd.offover=Picture(@ch.img,60,0,12,12)

ch.off=Picture(@ch.img,12,12,12,12)
ch.on=Picture(@ch.img,0,12,12,12)
ch.doff=Picture(@ch.img,24,12,12,12)
ch.don=Picture(@ch.img,36,12,12,12)
ch.onover=Picture(@ch.img,48,12,12,12)
ch.offover=Picture(@ch.img,60,12,12,12)

# scroll bar component
vsb.bg=@col.gray8
hsb.bg=@col.gray8

vsb.bn.br=zebra.ui.p3d.SBundleBorder(64)
hsb.bn.br=zebra.ui.p3d.SBundleBorder(32)

bt.img=path("button.gif")
hsb.db.out=Picture(@bt.img,30,0,13,14)
hsb.db.pressed=Picture(@bt.img,30,14,13,14)
hsb.db.over=@hsb.db.out
hsb.db.disabled=@hsb.db.out
hsb.ib.out=Picture(@bt.img,43,0,13,14)
hsb.ib.pressed=Picture(@bt.img,43,14,13,14)
hsb.ib.over=@hsb.ib.out
hsb.ib.disabled=@hsb.ib.out

vsb.ib.out=Picture(@bt.img,0,0,14,13)
vsb.ib.pressed=Picture(@bt.img,0,13,14,13)
vsb.ib.over=@vsb.ib.out
vsb.ib.disabled=@vsb.ib.out
vsb.db.out=Picture(@bt.img,14,0,14,13)
vsb.db.pressed=Picture(@bt.img,14,13,14,13)
vsb.db.over=@vsb.db.out
vsb.db.disabled=@vsb.db.out

#  border panel
#bp.bg=
bp.br=TitledBorder(@br.etched,16)
bp.title.fn=@def.bfn
bp.title.fg=@gray

ac.lay=FlowLayout(16,16,32,2)
ch.lay=FlowLayout(16,16,32,2)

# combobox component
combo.br=zebra.ui.p3d.ListBorder()
combo.sv=rgb(228,244,252)
combo.lay=*BorderLayout(0,0)

combo.img=path("combo.gif")
combo.bt.out=Picture(@combo.img,0,0,18,18)
combo.bt.over=Picture(@combo.img,36,0,18,18)
combo.bt.pressed=Picture(@combo.img,18,0,18,18)
combo.bt.disabled=Picture(@combo.img,54,0,18,18)
combo.wpad.br=Border(1, rgb(150, 150, 150), 1, 3)
combo.wpad.bg=@white
##combo.bt.ag=
##combo.bt.ps=Dimension(16,-1)

# notebook component
note.br=TitledBorder(@br.plain)
note.tab.off=zebra.ui.p3d.TabBorder(1)
note.tab.on=zebra.ui.p3d.TabBorder(0)
note.tab.over=zebra.ui.p3d.TabBorder(2)
note.tab.marker=@br.plain

# statusbar component
sbar.br=@br.sunken2

# progress bar
pr.br=Border(@col.gray2)
pr.bv=@col.gray4

# tooltip
tt.padding=(2,2,2,2)
tt.bg=@col.gray6
tt.br=Border(@col.gray1)
tt.fn=@def.sfn
tt.fg=@col.black

# Selection colors and views
rect.col=rgb(120,120,120)

# list component
list.pos.br=Border(1,@rect.col)
list.sv=rgb(228,244,252)
list.br=zebra.ui.p3d.ListBorder()
#list.bg=@col.gray1

# tree view component
#tree.bg=
tree.img=path("tree.gif")
tree.least=Picture(@tree.img,16,0,15,14)
tree.open=Picture(@tree.img,0,14,16,14)
tree.close=Picture(@tree.img,0,0,16,14)
tree.off=Picture(@tree.img,32,0,11,11)
tree.on=Picture(@tree.img,32,11,11,11)
tree.av=CompositeView((rgb(228,244,252), Border(1,rgb(200,180,200))))
tree.iv=Border(1, rgb(200,180,200), 1);
tree.vp.fg=@col.gray1
tree.vp.fn=@def.bfn

# Extender component
ext.img=path("ext.gif")
ext.off=Picture(@ext.img,0,0,13,13)
ext.on=Picture(@ext.img,13,0,13,13)
ext.title.bg=Gradient(rgb(220,220,220),rgb(160,160,160))
#ext.title.br=
ext.lab.fg=@col.white
ext.lab.fn=@def.bfn

# menu component
menu.sv=Gradient(rgb(228,244,252),rgb(167,217,245))
menu.pos.br=@menu.sv
menu.fgcol=rgb(90,90,90)
menu.fn=@def.fn
menu.sub=Picture(path("misc.gif"),0,0,10,9)
#!!!menu.br=BorderShadow(@br.sunken)
menu.br=Border(1)
#menu.bg=@def.bg
menu.bg=rgb(222,222,222)
menu.item.line=*zebra.ui.Line(@br.plain)

# split panel
split.bar.br=@br.raised
split.bar.bg=@col.gray2
split.bar.ps=Dimension(6,6)
#split.br

# link component
ln.fn=@def.bfn

# grid caption component
#grid.bg=
gcap.fn=@def.bfn
gcap.fgcol=@col.black
gcap.bg=@col.gray4
gcap.brv=@br.sunken

#  grid component
#grid.cell.bg=
#grid.bg=
grid.isv=Gradient(rgb(170,170,170), rgb(210,210,210))
grid.asv=Gradient(rgb(220,220,220), rgb(240,240,240))
grid.mv=Border(1,rgb(170,190,170))

# menubar component
#mbar.bg=Gradient(rgb(180,180,180),rgb(240,240,240))
mbar.bg=@white
#mbar.br=@br.plain
mbar.fn=@def.bfn
mbar.fgcol=@menu.fgcol
#mbar.onbr=Border(1,rgb(120,120,120))
#mbar.offbr=@menu.sv
mbar.onbr=@menu.sv
mbar.offbr=Gradient(rgb(248,255,255),rgb(187,237,255))

# textfield component
#tf.curv=
tf.br=zebra.ui.p3d.TFieldBorder()
#tf.bg=#ecf7f9
tf.bg=#eefBfE

tf.sel=#d3edad
tf.cmenu.cut="Cut"
tf.cmenu.del="Delete"
tf.cmenu.paste="Paste"
tf.cmenu.copy="Copy"
tf.cmenu.selall="Select all"
tf.cmenu=zebra.ui.TextField.Menu()

# slider component
sl.path=path("slider.gif")
sl.scc=@col.gray1
sl.hbundle=Picture(@sl.path,0,0,11,18)
sl.vbundle=Picture(@sl.path,11,0,18,11)
sl.br=@br.dot
sl.gauge=Border(@col.gray3)
sl.marker=@br.dot

#  spin component
#spin.img=path("spin.gif")
#spin.b1.pressed=Picture(@spin.img,15,0,15,9)
#spin.b1.over=Picture(@spin.img,0,0,15,9)
#spin.b1.out=Picture(@spin.img,30,0,15,9)
#spin.b2.pressed=Picture(@spin.img,15,9,15,9)
#spin.b2.over=Picture(@spin.img,0,9,15,9)
#spin.b2.out=Picture(@spin.img,30,9,15,9)
#spin.b.br=

# toolbar component
tb.over=@mbar.offbr
##@br.raised
tb.pressed=@bt.on
##@br.etched
##tb.out=Border(3,rgb(200,180,200))

tb.line.view=@br.dot

tb.combo.obr=Border(1,@col.black)
tb.combo.bg=@col.white
tb.combo.br=Border(1,rgb(200,180,200))

tb.br=zebra.ui.p3d.P3DBorder()
##tb.bg=
##tb.br=

# window component
win.img=path("win.gif")

win.b.over=Picture(@win.img,16,0,16,16)
win.b.out=Picture(@win.img,0,0,16,16)
win.b.pressed=Picture(@win.img,32,0,16,16)
win.icon=Picture(@win.img,16,32,16,16)
win.corner=Picture(@win.img,0,32,9,8)
win.br=@br.raised2

win.cap.av=@col.gray2
win.cap.iv=@col.gray6
#win.cap.iv=rgb(120,120,120,f0.3)

#!!!!!!
#  demo related stuff
#!!!!!
tooltiparea.fg=@blue
cell.bg1=@white
cell.bg2=@col.gray7
designer.title.fg=@black
designer.title.bg=@col.gray5
demo.createLabel.col=@black

icon.path=path("icons.gif")
icon.excl=Picture(@icon.path,32,0,32,32)

