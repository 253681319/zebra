zebra.ver="1.0.0"

#jal.doubleClickDelta=250
#jal.features=[Ljava.lang.Object;("zebra.ui.jal.MWheelSupport","zebra.ui.jal.J2Focus")

# managers
#event=zebra.ui.event.EventManager
#paint=zebra.ui.PaintManImpl
#paint=zebra.ui.jal.J2PaintManager
#focus=zebra.ui.FocusManager
#cursor=zebra.ui.CursorManager
#clip=zebra.ui.ClipboardMan
#tooltip=zebra.ui.TooltipMan
#pop=zebra.ui.PopupManager

# pallete
col.white=%255,255,255
col.black=%0x0,0x80,0x90

#%0x85,0x87,0x79
col.gray1=%0xC5,0xC7,0xC9
col.gray2=%0xD6,0xDD, 0xDA
col.gray3=%0xE5,0xE7,0xE0
col.gray4=%0xD0,0xD4,0xD3
col.gray5=%0xE0,0xE5,0xEA
col.gray6=%0xF0,0xF5,0xFF
col.gray7=%0xF0,0xF8,0xFF
col.gray8=@col.white
col.bg=%black
#%0xe2,0xf5,0xfe
#%0xfB,0xfB,0xfB
#%0xF8,0xF8,0xFF


# borders
br.raised2=zebra.ui.p3d.P3DBorder()
br.sunken2=zebra.ui.view.Border(4)
br.raised=zebra.ui.view.Border(1)
br.sunken=zebra.ui.p3d.ListBorder()
#!!!@br.etched

br.etched=zebra.ui.view.SimpleBorder(1, %0x46,0x9b,0xdd, 1, 4)
br.plain=zebra.ui.view.SimpleBorder(1, %0x46,0x9b,0xdd, 1)
br.dot=zebra.ui.view.SimpleBorder(2)

# default
def.lay=zebra.layout.RasterLayout()
def.fn=zebra.ui.Font("Arial", 0, 12)
def.bfn=zebra.ui.Font("Arial", 1, 12)
def.sfn=zebra.ui.Font("Arial", 0, 10)
def.bg=zebra.ui.view.Fill(@col.bg)
def.fgcol=%lightGray
#%0x22,0x8e,0xf1
#%0,0x70,0x70
#%80,80,80
def.brcol=@col.gray3

#  wizard
wizard=zebra.ui.p3d.Wizard()

# Layers
#layers=[Ljava.lang.Object;(zebra.ui.BaseLayer("root"),zebra.ui.WinLayer,zebra.ui.PopupLayer,zebra.ui.FocusLayer)

# button component
bt.on=zebra.ui.p3d.ButtonBorder(true)
bt.off=zebra.ui.p3d.ButtonBorder(false)
bt.over=zebra.ui.p3d.ButtonBorder(false,(%235,235,235, %120,140,140, @col.gray5, @col.gray7))
bt.br=*zebra.ui.view.ViewSet(("pressed", @bt.on, "out", @bt.off, "over", @bt.over ))
bt.marker=zebra.ui.view.SimpleBorder(1,@col.gray4)

# checkbox component
ch.img="p3d/checkbox.gif"

rd.off=zebra.ui.view.ImgRender(@ch.img,12,0,12,12)
rd.on=zebra.ui.view.ImgRender(@ch.img,0,0,12,12)
rd.offover=zebra.ui.view.ImgRender(@ch.img,48,0,12,12)
rd.don=zebra.ui.view.ImgRender(@ch.img,36,0,12,12)
rd.doff=zebra.ui.view.ImgRender(@ch.img,24,0,12,12)

ch.off=zebra.ui.view.ImgRender(@ch.img,12,12,12,12)
ch.on=zebra.ui.view.ImgRender(@ch.img,0,12,12,12)
ch.doff=zebra.ui.view.ImgRender(@ch.img,24,12,12,12)
ch.don=zebra.ui.view.ImgRender(@ch.img,36,12,12,12)
ch.onover=zebra.ui.view.ImgRender(@ch.img,48,12,12,12)
ch.offover=zebra.ui.view.ImgRender(@ch.img,60,12,12,12)

# scroll bar component
vsb.bg=zebra.ui.view.Fill(@col.gray8)
hsb.bg=zebra.ui.view.Fill(@col.gray8)

vsb.bn.br=zebra.ui.p3d.SBundleBorder(2)
hsb.bn.br=zebra.ui.p3d.SBundleBorder(1)

bt.img="p3d/button.gif"
hsb.db.out=zebra.ui.view.ImgRender(@bt.img,30,0,13,14)
hsb.db.pressed=zebra.ui.view.ImgRender(@bt.img,30,14,13,14)
hsb.db.over=@hsb.db.out
hsb.db.disabled=@hsb.db.out
hsb.ib.out=zebra.ui.view.ImgRender(@bt.img,43,0,13,14)
hsb.ib.pressed=zebra.ui.view.ImgRender(@bt.img,43,14,13,14)
hsb.ib.over=@hsb.ib.out
hsb.ib.disabled=@hsb.ib.out

vsb.ib.out=zebra.ui.view.ImgRender(@bt.img,0,0,14,13)
vsb.ib.pressed=zebra.ui.view.ImgRender(@bt.img,0,13,14,13)
vsb.ib.over=@vsb.ib.out
vsb.ib.disabled=@vsb.ib.out
vsb.db.out=zebra.ui.view.ImgRender(@bt.img,14,0,14,13)
vsb.db.pressed=zebra.ui.view.ImgRender(@bt.img,14,13,14,13)
vsb.db.over=@vsb.db.out
vsb.db.disabled=@vsb.db.out

#  border panel
#bp.bg=
bp.br=zebra.ui.view.TitledBorder(@br.etched,16)
bp.title.fn=@def.bfn
bp.title.fg=%0,0xB0,0xB0
#@def.fgcol


ac.lay=zebra.layout.FlowLayout(16,16,1,2)
ch.lay=zebra.layout.FlowLayout(16,16,1,2)

# combobox component
combo.br=zebra.ui.p3d.ListBorder()
combo.sv=zebra.ui.view.Fill(%228,244,252)
combo.lay=*zebra.layout.BorderLayout(0,0)

combo.img="p3d/combo.gif"
combo.bt.out=zebra.ui.view.ImgRender(@combo.img,0,0,18,18)
combo.bt.over=zebra.ui.view.ImgRender(@combo.img,36,0,18,18)
combo.bt.pressed=zebra.ui.view.ImgRender(@combo.img,18,0,18,18)
combo.bt.disabled=zebra.ui.view.ImgRender(@combo.img,54,0,18,18)
combo.wpad.br=@combo.br
combo.wpad.bg=@def.bg
##combo.bt.ag=
##combo.bt.ps=>16,-1

# notebook component
note.br=zebra.ui.view.TitledBorder(@br.plain)
note.tab.off=zebra.ui.p3d.TabView(0)
note.tab.on=zebra.ui.p3d.TabView(1)
note.tab.over=zebra.ui.p3d.TabView(2)
note.tab.marker=@br.plain

# statusbar component
sbar.br=@br.sunken2

# progress bar
pr.br=zebra.ui.view.SimpleBorder(%0x46,0x9b, 0xdd)
pr.bv=zebra.ui.view.Fill(@col.gray4)

# tooltip
tt.insets=(2,2,2,2)
tt.bg=zebra.ui.view.Fill(@col.gray6)
tt.br=zebra.ui.view.SimpleBorder(@col.gray1)
tt.fn=@def.sfn
tt.fg=@col.black

# Selection colors and views
rect.col=%180,90,70

# list component
list.pos.br=zebra.ui.view.SimpleBorder(1,@rect.col)
list.sv=zebra.ui.view.Fill(%228,244,252)
list.br=zebra.ui.p3d.ListBorder()
#list.bg=zebra.ui.view.Fill(@col.gray1)

# tree view component
#tree.bg=
tree.img="p3d/tree.gif"
tree.least=zebra.ui.view.ImgRender(@tree.img,16,0,15,14)
tree.open=zebra.ui.view.ImgRender(@tree.img,0,14,16,14)
tree.close=zebra.ui.view.ImgRender(@tree.img,0,0,16,14)
tree.off=zebra.ui.view.ImgRender(@tree.img,32,0,11,11)
tree.on=zebra.ui.view.ImgRender(@tree.img,32,11,11,11)
tree.av=zebra.ui.view.CompositeView((zebra.ui.view.Fill(%228,244,252), zebra.ui.view.SimpleBorder(1,%200,180,200)))
tree.iv=zebra.ui.view.SimpleBorder(1, %200,180,200, 1);
tree.vp.fg=@col.black
tree.vp.fn=@def.bfn

# Extender component
ext.img="p3d/ext.gif"
ext.off=zebra.ui.view.ImgRender(@ext.img,0,0,13,13)
ext.on=zebra.ui.view.ImgRender(@ext.img,13,0,13,13)
ext.title.bg=zebra.ui.view.Gradient(%220,220,220,%160,160,160)
#ext.title.br=
ext.lab.fg=@col.white
ext.lab.fn=@def.bfn

# menu component
menu.sv=zebra.ui.view.Gradient(%228,244,252,%167,217,245)
menu.pos.br=@menu.sv
menu.fgcol=%90,90,90
menu.fn=@def.fn
menu.sub=zebra.ui.view.ImgRender("p3d/misc.gif",0,0,10,9)
#!!!menu.br=zebra.ui.view.BorderShadow(@br.sunken)
menu.br=zebra.ui.view.SimpleBorder(1, @col.black)
#menu.bg=@def.bg
menu.bg=zebra.ui.view.Fill(JAVA.awt.Color(0xF0,0xF8,0xFF,f0.7))
menu.item.line=*zebra.ui.Line(@br.plain)

# split panel
split.bar.br=@br.plain
split.bar.bg=zebra.ui.view.Fill(%0xC3,0xD9,0xFF)
split.bar.ps=>3,3
#split.br

# link component
ln.fn=@def.bfn

# grid caption component
#grid.bg=
gcap.fn=@def.bfn
gcap.fgcol=@col.black
gcap.bg=zebra.ui.view.Gradient(@col.gray3, @col.gray7)
gcap.brv=@br.sunken

#  grid component
#grid.cell.bg=
#grid.bg=
grid.isv=zebra.ui.view.Gradient(%170,190,170, %190,210,190)
grid.asv=zebra.ui.view.Gradient(%200,220,200, %220,240,220)
grid.mv=zebra.ui.view.SimpleBorder(1,%170,190,170)

# menubar component
#mbar.bg=zebra.ui.view.Gradient(%180,180,180,%240,240,240)
mbar.bg=zebra.ui.view.Fill(%255,255,255)
#mbar.br=@br.plain
mbar.fn=@def.bfn
mbar.fgcol=@menu.fgcol
#mbar.onbr=zebra.ui.view.SimpleBorder(1,%120,120,120)
#mbar.offbr=@menu.sv
mbar.onbr=@menu.sv

#grd.addColorStop(0, "#8ED6FF"); // light blue
#grd.addColorStop(1, "#004CB3"); // dark blue

#mbar.offbr=zebra.ui.view.Gradient(%187,237,255, %248,255,255)
mbar.offbr=zebra.ui.view.Gradient(%0xAE,0xF6,0xFF, %0x4,0x9C,0xF3)



# textfield component
#tf.curv=
tf.br=zebra.ui.p3d.TFieldBorder()
tf.bg=zebra.ui.view.Fill(@col.white)
tf.sel=%green
tf.cmenu.cut="Cut"
tf.cmenu.del="Delete"
tf.cmenu.paste="Paste"
tf.cmenu.copy="Copy"
tf.cmenu.selall="Select all"
#tf.cmenu=zebra.ui.TextField.Menu()

# textrender
txt.dc1=%128,128,128
txt.dc2=@col.white

# slider component
sl.scc=@col.gray1
sl.hbundle=zebra.ui.view.ImgRender("p3d/slider.gif",0,0,11,18)
sl.vbundle=zebra.ui.view.ImgRender("p3d/slider.gif",11,0,18,11)
sl.br=@br.dot
sl.gauge=zebra.ui.view.SimpleBorder(@col.gray3)
sl.marker=@br.dot

#  spin component
#spin.img="p3d/spin.gif"
#spin.b1.pressed=zebra.ui.view.ImgRender(@spin.img,15,0,15,9)
#spin.b1.over=zebra.ui.view.ImgRender(@spin.img,0,0,15,9)
#spin.b1.out=zebra.ui.view.ImgRender(@spin.img,30,0,15,9)
#spin.b2.pressed=zebra.ui.view.ImgRender(@spin.img,15,9,15,9)
#spin.b2.over=zebra.ui.view.ImgRender(@spin.img,0,9,15,9)
#spin.b2.out=zebra.ui.view.ImgRender(@spin.img,30,9,15,9)
#spin.b.br=

# toolbar component

#tb.over=@mbar.offbr
tb.over=zebra.ui.view.CompositeView(zebra.ui.view.Gradient(@col.black, @col.white), @br.plain)
##@br.raised

#tb.pressed=@bt.on
tb.pressed=@br.plain


#@br.etched
#tb.out=zebra.ui.view.SimpleBorder(3,%200,180,200)

tb.line.view=@br.dot

tb.combo.obr=zebra.ui.view.SimpleBorder(1,@col.black)
tb.combo.bg=zebra.ui.view.Fill(@col.white)
tb.combo.br=zebra.ui.view.SimpleBorder(1,%200,180,200)

tb.br=zebra.ui.p3d.P3DBorder()
##tb.bg=
##tb.br=

# window component
win.img="p3d/win.gif"
win.b.over=zebra.ui.view.ImgRender(@win.img,16,0,16,16)
win.b.out=zebra.ui.view.ImgRender(@win.img,0,0,16,16)
win.b.pressed=zebra.ui.view.ImgRender(@win.img,32,0,16,16)
win.icon=zebra.ui.view.ImgRender(@win.img,16,32,16,16)
win.corner=zebra.ui.view.ImgRender(@win.img,0,32,9,8)
win.br=@br.raised2

win.prod=*zebra.ui.BWinProducer()
win.baseprod.cap.av=zebra.ui.view.Fill(@col.gray2)
win.baseprod.cap.iv=zebra.ui.view.Fill(@col.gray6)
#win.baseprod.cap.iv=zebra.ui.view.Fill(JAVA.awt.Color(120,120,120, f0.3))

# Color, font, file panels
#filepan.path="Path:"
#filepan.name="File Name:"
#filepan.mask="File Mask:"
#filepan.root="Root:"

# Icons
#icon.path="p3d/icons.gif"
#icon.mycomp=zebra.ui.view.ImgRender(@icon.path,16,0,16,16)
#icon.mydocs=zebra.ui.view.ImgRender(@icon.path,0,0,16,16)
#icon.recent=zebra.ui.view.ImgRender(@icon.path,16,16,16,16)
#icon.desk=zebra.ui.view.ImgRender(@icon.path,0,16,16,16)

#icon.excl=zebra.ui.view.ImgRender(@icon.path,32,0,32,32)
#icon.cross=zebra.ui.view.ImgRender(@icon.path,64,0,32,32)
#icon.quest=zebra.ui.view.ImgRender(@icon.path,96,0,32,32)

#  Blank dialog
#dialog.bt.ok="Ok"
#dialog.bt.cancel="Cancel"

# Color panel
#colpan.selected="Selected Color:"
#colpan.predef="Predefined Color:"
#colpan.slb=zebra.ui.view.ImgRender("p3d/slider.gif",11,11,9,9)
#colpan.red="Red:"
#colpan.green="Green:"
#colpan.blue="Blue:"
#colpan.colors.r0=[Ljava.lang.Object;(%255,128,128,%255,128,128,%128,255,128,%0,255,128,%128,255,255,%0,128,255,%255,128,192,%255,128,255,%255,0,0,%255,0,0,%128,255,0,%0,255,64)
#colpan.colors.r1=[Ljava.lang.Object;(%0,255,255,%0,128,192,%128,128,192,%255,0,255,%128,64,64,%255,128,64,%0,255,255,%0,128,128,%0,64,128,%128,128,255,%128,0,64,%255,0,128)
#colpan.colors.r2=[Ljava.lang.Object;(%128,0,0,%255,128,0,%0,128,0,%0,128,64,%0,0,255,%0,0,160,%128,0,128,%128,0,255,%64,0,0,%128,64,0,%0,64,0,%0,64,64)
#colpan.colors.r3=[Ljava.lang.Object;(%0,0,128,%0,0,64,%64,0,64,%64,0,128,%0,0,0,%128,128,0,%128,128,64,%128,128,128,%64,128,128,%192,192,192,%64,0,64,%255,255,255)
#colpan.colors=[Ljava.lang.Object;(@colpan.colors.r0,@colpan.colors.r1,@colpan.colors.r2,@colpan.colors.r3)

# Font panel
#fontpan.family="Font Family"
#fontpan.style="Font Style"
#fontpan.size="Font Size:"
#fontpan.bold="Bold Font"
#fontpan.italic="Italic Font"
#fontpan.sample="Font Sample:"

