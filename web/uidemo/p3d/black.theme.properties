zebra.ver="1.0.0"

#jal.doubleClickDelta=250
#jal.features=[Ljava.lang.Object;("zebra.ui.jal.MWheelSupport","zebra.ui.jal.J2Focus")

# managers
#event=zebra.ui.EventManager
#paint=zebra.ui.PaintManImpl
#paint=zebra.ui.jal.PaintManager
#focus=zebra.ui.FocusManager
#cursor=zebra.ui.CursorManager
#clip=zebra.ui.ClipboardMan
#tooltip=zebra.ui.TooltipMan
#pop=zebra.ui.PopupManager

# pallete
col.white=%125,125,125
col.black=%0xFF,0xFF,0xFF

col.gray1=%0x46,0x46,0x46
col.gray2=%0x46,0x46,0x46
col.gray3=%0x50,0x50,0x50
col.gray4=%0x77,0x77,0x77
col.gray5=%gray
col.gray6=%0xA0,0xA0,0xA0
col.gray7=%0xB8,0xB8,0xB8
col.gray8=%0xde,0xde,0xde 
#@col.white
col.bg=%black

#  wizard
wizard=zebra.ui.p3d.Wizard()


# borders
br.raised2=zebra.ui.p3d.P3DBorder()
br.sunken2=zebra.ui.view.Border(4)
br.raised=zebra.ui.view.Border(1)
br.sunken=zebra.ui.p3d.ListBorder()
#!!!@br.etched

br.etched=zebra.ui.view.SimpleBorder(1, %0xCC,0xCC,0xCC, 2, 4)
br.plain=zebra.ui.view.SimpleBorder(1, %0xcc,0xcc,0xcc, 1)
br.dot=zebra.ui.view.SimpleBorder(2, %255,255,255, 2)

# default
def.lay=zebra.layout.RasterLayout()
def.fn=JAVA.awt.NormalFont()
def.bfn=JAVA.awt.BoldFont()
def.sfn=JAVA.awt.SmallFont()
def.bg=zebra.ui.view.Fill(@col.bg)
def.fgcol=%lightGray
#def.fgcol=%white
def.brcol=@col.gray3

# Layers
#layers=[Ljava.lang.Object;(zebra.ui.BaseLayer("root"),zebra.ui.WinLayer,zebra.ui.PopupLayer,zebra.ui.FocusLayer)

# button component
bt.on=zebra.ui.p3d.ButtonBorder(true)
bt.off=zebra.ui.p3d.ButtonBorder(false)
bt.over=zebra.ui.p3d.ButtonBorder(false,(%235,235,235, %120,140,140, @col.gray5, @col.gray7))


bt.off=zebra.ui.view.SimpleBorder(1,%205,205,205, 3, 8)
bt.on=zebra.ui.view.SimpleBorder(1,%255,255,255, 3, 8)
bt.over=zebra.ui.view.SimpleBorder(1,%255,0,0, 5, 8)



bt.br=*zebra.ui.view.ViewSet(("pressed", @bt.on, "out", @bt.off, "over", @bt.over ))
bt.marker=zebra.ui.view.SimpleBorder(1,@col.gray4)
bt.lab.fg=%white
#bt.lab.fn=@def.bfn

# checkbox component
rd.off=zebra.ui.p3d.RadioboxView(false)
rd.on=zebra.ui.p3d.RadioboxView(true)
rd.onover=zebra.ui.p3d.RadioboxView(true, %red)
rd.offover=zebra.ui.p3d.RadioboxView(false, %red)

ch.off=zebra.ui.p3d.CheckboxView(false)
ch.on=zebra.ui.p3d.CheckboxView(true)
ch.onover=zebra.ui.p3d.CheckboxView(true, %red)
ch.offover=zebra.ui.p3d.CheckboxView(false, %red)

#ch.onover=zebra.ui.view.ImgRender(@ch.img,48,12,12,12)
#ch.offover=zebra.ui.view.ImgRender(@ch.img,60,12,12,12)

# scroll bar component
vsb.bg=zebra.ui.view.Fill(@col.gray3)
hsb.bg=zebra.ui.view.Fill(@col.gray3)

vsb.bn.br=zebra.ui.view.SimpleBorder(1, %200, 0, 0, 3, 6)
hsb.bn.br=zebra.ui.view.SimpleBorder(1, %200, 0,0, 3, 6)

bt.img="p3d/button.gif"
hsb.db.out=zebra.ui.p3d.ScrollButton(1)
hsb.db.pressed=zebra.ui.p3d.ScrollButton(1)
hsb.db.over=@hsb.db.out
hsb.db.disabled=@hsb.db.out

hsb.ib.out=zebra.ui.p3d.ScrollButton(2)
hsb.ib.pressed=zebra.ui.p3d.ScrollButton(2)
hsb.ib.over=@hsb.ib.out
hsb.ib.disabled=@hsb.ib.out

vsb.ib.out=zebra.ui.p3d.ScrollButton(8)
vsb.ib.pressed=zebra.ui.p3d.ScrollButton(8)
vsb.ib.over=@vsb.ib.out
vsb.ib.disabled=@vsb.ib.out

vsb.db.out=zebra.ui.p3d.ScrollButton(4)
vsb.db.pressed=zebra.ui.p3d.ScrollButton(4)
vsb.db.over=@vsb.db.out
vsb.db.disabled=@vsb.db.out

#  border panel
#bp.bg=
bp.br=zebra.ui.view.TitledBorder(@br.etched,16)
bp.title.fn=@def.bfn
#bp.title.fg=%9f,0xda,0x58
bp.title.fg=%white


ac.lay=zebra.layout.FlowLayout(16,16,1,2)
ch.lay=zebra.layout.FlowLayout(16,16,1,2)

# combobox component
combo.br=zebra.ui.p3d.ListBorder()
combo.sv=zebra.ui.view.Fill(%200,0,0)
combo.lay=*zebra.layout.BorderLayout(0,0)

combo.img="p3d/combo.gif"
combo.bt.out=zebra.ui.view.ImgRender(@combo.img,0,0,18,18)
combo.bt.over=zebra.ui.view.ImgRender(@combo.img,36,0,18,18)
combo.bt.pressed=zebra.ui.view.ImgRender(@combo.img,18,0,18,18)
combo.bt.disabled=zebra.ui.view.ImgRender(@combo.img,54,0,18,18)
combo.wpad.br=@combo.br
combo.wpad.bg=@def.bg
##combo.bt.ag=
##combo.bt.ps=>16,-1

# notebook component
note.br=zebra.ui.view.TitledBorder(@br.etched)
note.tab.off=zebra.ui.p3d.TabBorder(1,2)
note.tab.on=zebra.ui.p3d.TabBorder(0,2)
note.tab.over=zebra.ui.p3d.TabBorder(2,2)
note.tab.marker=@br.plain
note.tab.fg=%red
#%9f,0xda,0x58

@note.tab.on.onColor1=%white
@note.tab.on.onColor2=%gray
@note.tab.off.offColor=%darkGray

@note.tab.off.fillColor2=%50,50,50
@note.tab.off.fillColor1=%110,110,110
@note.tab.off.fillColor3=%110,110,110

@note.tab.on.fillColor2=%50,50,50
@note.tab.on.fillColor1=%110,110,110
@note.tab.on.fillColor3=%110,110,110

@note.tab.over.fillColor1=%50,50,50
@note.tab.over.fillColor2=%110,110,110
@note.tab.over.fillColor3=%110,110,110


# statusbar component
sbar.br=@br.sunken2

# progress bar
#pr.br=zebra.ui.view.SimpleBorder(1, %9f,0xda,0x58, 2, 2)
pr.br=zebra.ui.view.SimpleBorder(1, %255,0,0, 2, 2)
pr.bv=zebra.ui.view.Fill(%180, 0, 0)

# tooltip
tt.padding=(2,2,2,2)
tt.bg=zebra.ui.view.Fill(@col.gray6)
tt.br=zebra.ui.view.SimpleBorder(@col.gray1)
tt.fn=@def.sfn
tt.fg=@col.black

# Selection colors and views
rect.col=%180,90,70

# list component
list.pos.br=zebra.ui.view.SimpleBorder(1,@rect.col)
list.sv=zebra.ui.view.Fill(%200,0,0)
list.br=zebra.ui.p3d.ListBorder(%255,255,255,%200,200,200,%150,0,0)

#list.bg=zebra.ui.view.Fill(@col.gray1)

# tree view component
#tree.bg=
tree.img="p3d/tree.gif"
tree.least=zebra.ui.view.ImgRender(@tree.img,16,0,15,14)
tree.open=zebra.ui.view.ImgRender(@tree.img,0,14,16,14)
tree.close=zebra.ui.view.ImgRender(@tree.img,0,0,16,14)
tree.off=zebra.ui.view.ImgRender(@tree.img,32,0,11,11)
tree.on=zebra.ui.view.ImgRender(@tree.img,32,11,11,11)
tree.av=zebra.ui.view.CompositeView((zebra.ui.view.Fill(%200,0,0), zebra.ui.view.SimpleBorder(1,%200,180,200)))
tree.iv=zebra.ui.view.SimpleBorder(1, %150,0,0, 1);
tree.vp.fg=@col.black
tree.vp.fn=@def.bfn

# Extender component
ext.img="p3d/ext.gif"
ext.off=zebra.ui.view.ImgRender(@ext.img,0,0,13,13)
ext.on=zebra.ui.view.ImgRender(@ext.img,13,0,13,13)
ext.title.bg=zebra.ui.view.Gradient(%220,220,220,%160,160,160)
#ext.title.br=
ext.lab.fg=@col.white
ext.lab.fn=@def.bfn

# menu component
menu.sv=zebra.ui.view.Fill(%200,0,0)
menu.pos.br=@menu.sv
menu.fgcol=%9f,0xda,0x58
menu.fn=@def.fn
menu.sub=zebra.ui.view.ImgRender("p3d/misc.gif",0,0,10,9)
#!!!menu.br=zebra.ui.view.BorderShadow(@br.sunken)
menu.br=zebra.ui.view.SimpleBorder(1, @col.black)
#menu.bg=@def.bg
menu.bg=zebra.ui.view.Gradient(%120,120,120, %0,0,0)
menu.item.line=*zebra.ui.Line(@br.plain)

# split panel
split.bar.br=@br.plain
split.bar.bg=zebra.ui.view.Fill(%200,0,0)
split.bar.ps=>4,4
#split.br

# link component
ln.fn=@def.bfn
ln.colors=(%255,0,0, %200,0,0, %255,255,255, %255,0,0, %200,200,200)

line.col=%white

# grid caption component
#grid.bg=
gcap.fn=@def.bfn
gcap.fgcol=@col.black
#gcap.bg=zebra.ui.view.Gradient(@col.gray3, @col.gray7)
gcap.bg=zebra.ui.view.Gradient(%180,0,0, %230,0,0)
gcap.brv=@br.plain

#  grid component
#grid.cell.bg=
#grid.bg=
grid.isv=zebra.ui.view.Fill(%0,0,0)
grid.asv=zebra.ui.view.Fill(%200,0,0)
grid.mv=zebra.ui.view.SimpleBorder(1,%170,190,170)

# menubar component
#mbar.bg=zebra.ui.view.Gradient(%180,180,180,%240,240,240)
#mbar.bg=zebra.ui.view.Fill(%255,255,255)
#mbar.br=@br.plain
mbar.fn=@def.bfn
mbar.fgcol=@menu.fgcol
#mbar.onbr=zebra.ui.view.SimpleBorder(1,%120,120,120)
#mbar.offbr=@menu.sv
mbar.onbr=@menu.sv

#grd.addColorStop(0, "#8ED6FF"); // light blue
#grd.addColorStop(1, "#004CB3"); // dark blue

#mbar.offbr=zebra.ui.view.Gradient(%187,237,255, %248,255,255)
mbar.offbr=zebra.ui.view.Gradient(%0xAE,0xAE,0xAE, %0x9C,0x9C,0x9C)


# textfield component
#tf.curv=
tf.cur.col=%red
tf.br=zebra.ui.p3d.TFieldBorder(@col.gray4, @col.gray6)
tf.bg=zebra.ui.view.Gradient(%42,42,42, %77,77,77)
tf.sel=%0,140,0
tf.cmenu.cut="Cut"
tf.cmenu.del="Delete"
tf.cmenu.paste="Paste"
tf.cmenu.copy="Copy"
tf.cmenu.selall="Select all"
#tf.cmenu=zebra.ui.TextField.Menu()

# textrender
txt.dc1=%128,128,128
txt.dc2=@col.white

# slider component
sl.scc=%red
sl.hbundle=zebra.ui.view.ImgRender("p3d/slider.gif",0,0,11,18)
sl.vbundle=zebra.ui.view.ImgRender("p3d/slider.gif",11,0,18,11)
sl.br=@br.dot
sl.gauge=zebra.ui.view.SimpleBorder(%lightGray)
sl.marker=@br.dot

#  spin component
#spin.img="p3d/spin.gif"
#spin.b1.pressed=zebra.ui.view.ImgRender(@spin.img,15,0,15,9)
#spin.b1.over=zebra.ui.view.ImgRender(@spin.img,0,0,15,9)
#spin.b1.out=zebra.ui.view.ImgRender(@spin.img,30,0,15,9)
#spin.b2.pressed=zebra.ui.view.ImgRender(@spin.img,15,9,15,9)
#spin.b2.over=zebra.ui.view.ImgRender(@spin.img,0,9,15,9)
#spin.b2.out=zebra.ui.view.ImgRender(@spin.img,30,9,15,9)
#spin.b.br=

# toolbar component

#tb.over=@mbar.offbr
tb.over=zebra.ui.view.CompositeView(zebra.ui.view.Gradient(@col.black, @col.white), @br.plain)
##@br.raised

#tb.pressed=@bt.on
tb.pressed=@br.plain


#@br.etched
#tb.out=zebra.ui.view.SimpleBorder(3,%200,180,200)

tb.line.view=@br.dot

tb.combo.obr=zebra.ui.view.SimpleBorder(1,@col.black)
tb.combo.bg=zebra.ui.view.Fill(@col.white)
tb.combo.br=zebra.ui.view.SimpleBorder(1,%200,180,200)

tb.br=zebra.ui.p3d.P3DBorder()
##tb.bg=
##tb.br=

# window component
win.img="p3d/win.gif"
win.b.over=zebra.ui.view.ImgRender(@win.img,16,0,16,16)
win.b.out=zebra.ui.view.ImgRender(@win.img,0,0,16,16)
win.b.pressed=zebra.ui.view.ImgRender(@win.img,32,0,16,16)
win.icon=zebra.ui.view.ImgRender(@win.img,16,32,16,16)
win.corner=zebra.ui.view.ImgRender(@win.img,0,32,9,8)
win.br=zebra.ui.view.SimpleBorder(1, %200,200,200, 4, 3) 

win.prod=*zebra.ui.BWinProducer()
win.baseprod.cap.av=zebra.ui.view.Fill(%red)
win.baseprod.cap.iv=zebra.ui.view.Fill(%200,0,0)


#!!!!!!
#  demo related stuff
#!!!!!
tooltiparea.fg=%9f,0xda,0x58
cell.bg1=%50,0,0
cell.bg2=%100,0,0
designer.title.fg=%9f,0xda,0x58
designer.title.bg=%120,0,0


